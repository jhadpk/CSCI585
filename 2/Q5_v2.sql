-- PostgreSQL 11.4 on x86_64-apple-darwin18.6.0, compiled by Apple LLVM version 10.0.1 (clang-1001.0.46.4), 64-bit

SELECT
   instructor 
FROM
   instructor_canditates 
EXCEPT
SELECT
   instructor 
FROM
   (
      SELECT
         * 
      FROM
         (
            SELECT 
               DISTINCT(instructor) 
            FROM
               instructor_canditates
         )
         a, subject 
      EXCEPT
      SELECT
         * 
      FROM
         instructor_canditates
   )
   x;


/*
EXPLANATION

We use MINUS (EXCEPT in POSTGRES) operator to get to our result.

Tables: 
1. instructor_canditates (Columns: instructor, subject)
2. subject (Column: name)


[Note: I will use the comment number to refer to the actual SQL query from that comment.]

(1) First get all combinations of [instructor, subject], for only the subjects that are needed for an instructor to get hired. We do this by doing a cartesian product (natural join) of instructor_candidates.instructor with subject.
      --SELECT * FROM (SELECT DISTINCT(instructor) FROM instructor_canditates ) a, subject
(2) Use the result generated by 1 to minus entries present in instructor_candidates table. This gives us the combination of [instructor, subject] of instructors with subbject that they dont expertise in, but is required for getting hired.. 
      -- (1) EXCEPT SELECT * FROM instructor_canditates
(3) We then select the names of such instructors from query (2). By this we have formed the set of instructors, who should not be in final result.
      -- SELECT instructor FROM (2)
(4) Now use the primary instructor_canditates.instructor column to EXCEPT the names obtained in (3). This gives us the required resultset.
      -- SELECT instructor FROM instructor_canditates EXCEPT (4)
*/



/*
Required DDL and DML:


CREATE TABLE instructor_canditates (
instructor VARCHAR(100) NOT NULL,
Subject VARCHAR(25) NOT NULL
);

INSERT INTO instructor_canditates VALUES ('Aleph', 'Scratch');
INSERT INTO instructor_canditates VALUES ('Aleph', 'Java');
INSERT INTO instructor_canditates VALUES ('Aleph', 'Processing');
INSERT INTO instructor_canditates VALUES ('Bit', 'Python');
INSERT INTO instructor_canditates VALUES ('Bit', 'JavaScript');
INSERT INTO instructor_canditates VALUES ('Bit', 'Java');
INSERT INTO instructor_canditates VALUES ('CRC', 'Python');
INSERT INTO instructor_canditates VALUES ('CRC', 'JavaScript');
INSERT INTO instructor_canditates VALUES ('Dat', 'Scratch');
INSERT INTO instructor_canditates VALUES ('Dat', 'Python');
INSERT INTO instructor_canditates VALUES ('Dat', 'JavaScript');
INSERT INTO instructor_canditates VALUES ('Emscr', 'Scratch');
INSERT INTO instructor_canditates VALUES ('Emscr', 'Processing');
INSERT INTO instructor_canditates VALUES ('Emscr', 'JavaScript');
INSERT INTO instructor_canditates VALUES ('Emscr', 'Python');


CREATE TABLE subject(
name VARCHAR(25) NOT NULL
);

INSERT INTO subject VALUES ('JavaScript');
INSERT INTO subject VALUES ('Scratch');
INSERT INTO subject VALUES ('Python');
*/